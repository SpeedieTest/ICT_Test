from datetime import datetime

# Function to analyze SNORT logs and detect potential malware detections
def analyse_malware_detection(logs):
    # List to store generated alert messages
    alerts = []
    # List to store detailed information about each alert
    alert_details = []

    # Iterate through logs to identify malware detections
    for log in logs:
        if log.get('service') == 'snort' and log.get('classification') == 'Malware Detected':
            # Create an alert message for malware detection
            alert_message = f"Alert: Malware detected from {log.get('src_ip', 'N/A')} to {log.get('dst_ip', 'N/A')}"
            detected_timestamp = log.get('timestamp', 'N/A')
            columns = ["Timestamp", "Source IP", "Destination IP", "File Name", "File Hash", "File Type", "URI", "Host", "Original Log"]
            alerts.append({'alert_message': alert_message, 'detected_timestamp': detected_timestamp, 'log_source': 'snort', 'columns': columns})

            # Collect detailed logs for the alert
            alert_details.append({
                'alert_message': alert_message,
                'detected_timestamp': detected_timestamp,
                'logs': [
                    {
                        'timestamp': log.get('timestamp', 'N/A'),
                        'source_ip': log.get('src_ip', 'N/A'),
                        'destination_ip': log.get('dst_ip', 'N/A'),
                        'file_name': log.get('file_name', 'N/A'),
                        'file_hash': log.get('file_hash', 'N/A'),
                        'file_type': log.get('file_type', 'N/A'),
                        'uri': log.get('uri', 'N/A'),
                        'host': log.get('host', 'N/A'),
                        'original_log': log.get('original_log', 'N/A')
                    }
                ]
            })

    # Sort alerts by detected timestamp
    alerts.sort(key=lambda x: datetime.strptime(x['detected_timestamp'], "%b %d %H:%M:%S"))
    alert_details.sort(key=lambda x: datetime.strptime(x['detected_timestamp'], "%b %d %H:%M:%S"))

    # Return the list of alerts and detailed alert information
    return alerts, alert_details